/*! @violentmonkey/dom v1.0.9 | ISC License */
!function(e){"use strict";function t(){return(t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}
/*! @gera2ld/jsx-dom v1.2.1 | ISC License */var n=["innerHTML","innerText","textContent",{key:"value",tag:"textarea"}],r={name:"Fragment"};function o(e,t){var n,i;if(e===r)n=document.createDocumentFragment();else{if("string"!=typeof e)throw new Error("Invalid element type: "+e);var l=o.createElement(e);n=l,t&&Object.keys(t).forEach((function(n){var r=t[n];null!=r&&(n.startsWith("on")?l.addEventListener(n.slice(2).toLowerCase(),r):"children"===n?c(l,r):"style"===n&&"object"==typeof r?u(l,r):"dangerouslySetInnerHTML"===n&&r?l.innerHTML=r.__html||"":"ref"===n&&"function"==typeof r?i=r:"boolean"==typeof r?r?l.setAttribute(n,n):l.removeAttribute(n):a(e,n)?l[n]=r:("className"===n?n="class":"labelFor"===n&&(n="for"),l.setAttribute(n,""+r)))}))}for(var s=arguments.length,f=new Array(s>2?s-2:0),y=2;y<s;y++)f[y-2]=arguments[y];return c(n,f),i&&i(n),n}function a(e,t){var r={tag:e,key:t};return n.some((function(e){return"string"==typeof e?t===e:Object.keys(e).every((function(t){return e[t]===r[t]}))}))}function c(e,t){t.forEach((function(t){null!=t&&!1!==t&&(Array.isArray(t)?c(e,t):"object"!=typeof t?e.appendChild(document.createTextNode(""+t)):e.appendChild(t))}))}function u(e,t){Object.keys(t).forEach((function(n){var r=t[n];e.style[n]="number"==typeof r?r+"px":r}))}o.createElement=function(e){return document.createElement(e)};o.createElement=e=>document.createElementNS("http://www.w3.org/1999/xhtml",e),e.Fragment=r,e.createElement=o,e.getElementsByXPath=function(e,t=document){const n=document.evaluate(e,t,null,XPathResult.ANY_TYPE,null),r=[];let o;for(;o=n.iterateNext();)r.push(o);return r},e.getTextValues=function e(t){return t.nodeType===Node.TEXT_NODE?[t.nodeValue]:t.nodeType!==Node.ELEMENT_NODE||["script","style"].includes(t.tagName.toLowerCase())?[]:Array.from(t.childNodes).flatMap(e)},e.observe=function(e,n,r){let o;const a=new MutationObserver(((e,t)=>{n(e,t)&&o()}));return a.observe(e,t({childList:!0,subtree:!0},r)),o=()=>a.disconnect(),o}}(this.VM=this.VM||{});
